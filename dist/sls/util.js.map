{"version":3,"sources":["../../src/sls/util.js"],"names":["crypto","require","parseURL","parse","module","exports","window","Util","checkDefault","config","defaultConfig","k","endpoint","replace","httpReq","mt","url","headers","body","fn","timeout","urlinfo","toLowerCase","params","query","encode","hasKey","Buffer","length","byteLength","opt","method","hostname","port","pathname","$","ajax","signFn","accessKey","str","hmac","createHmac","update","digest","md5Fn","s","createHash","getDate","Date","toGMTString","limitLen","data","limit","sub","dstr","JSON","stringify","len","substring","m","key"],"mappings":"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","file":"util.js","sourcesContent":["\"use strict\";\n\nvar crypto = require('crypto');\nvar parseURL = require('url').parse;\n\nmodule.exports = window.Util =  {\n  parseURL: parseURL,\n  checkDefault: function(config, defaultConfig) {\n    for (var k in defaultConfig) {\n      if (config[k] == null) config[k] = defaultConfig[k];\n    }\n    config.endpoint = config.endpoint.replace(/\\/*$/, '');\n  },\n\n\n  /**\n   * 服务端使用 node 的 httpRequest 发送请求\n   * @param: mt   <String>\n   * @param: url  <String>\n   * @param: headers <Object>\n   * @param: body <String>\n   * @param: fn <Function> callback(err, text, status, headers)\n   * @param: timeout <Integer> default:10000ms\n   * @return: httpRequest\n   */\n  httpReq: function(mt, url, headers, body, fn, timeout) {\n\n    var urlinfo = parseURL(url, false);\n    mt = mt.toLowerCase();\n\n    var params = urlinfo.query;\n    if (params) {\n      params = '?' + params;\n    } else {\n      params = \"\";\n    }\n\n    var encode = 'utf8';\n    if (body && !hasKey(headers, 'content-length')) {\n      if (body instanceof Buffer) {\n        encode = 'binary';\n        headers['content-length'] = body.length;\n      } else headers['content-length'] = Buffer.byteLength(body, 'utf8');\n    }\n\n    var opt = {\n      method: mt,\n      url: 'http://' + urlinfo.hostname + ':' + (urlinfo.port || 80) + urlinfo.pathname + params,\n      headers: headers\n\n    };\n    return $.ajax(opt);\n\n  },\n\n  signFn: function(accessKey, str) {\n    var hmac = crypto.createHmac('sha1', accessKey);\n    return hmac.update(str, 'utf8').digest('base64');\n  },\n\n  md5Fn: function(s) {\n    if (s) return crypto.createHash('md5').update(s).digest('hex');\n    else return '';\n  },\n\n  getDate: function() {\n    return new Date().toGMTString();\n  },\n\n  limitLen: function(data, limit, sub) {\n    var dstr = typeof(data) == 'object' ? JSON.stringify(data) : data;\n    var len = dstr.length;\n    sub = sub || limit;\n    if (len > limit) {\n      return dstr.substring(0, sub) + '...length:' + len + ';';\n    } else {\n      return data;\n    }\n  }\n};\n\nvar hasKey = function(m, key) {\n  for (var k in m) {\n    if (k.toLowerCase() == key.toLowerCase()) return true;\n  }\n  return false;\n};\n"]}