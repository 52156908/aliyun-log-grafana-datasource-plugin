{"version":3,"sources":["../src/datasource.js"],"names":["_","SLS","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","projectName","jsonData","project","logstore","user","password","q","withCredentials","headers","basicAuth","length","defaultConfig","accessId","accessKey","timeout","signature_method","api_version","logger","options","console","log","requests","slsclient","promise","Promise","resolve","targets","forEach","target","hide","query","replace","re","reArray","match","old","col","sec","indexOf","v","parseInt","request","GetData","range","from","_d","getTime","to","then","doRequest","result","status","method","r","data","reject","Error","time_col","xcol","ycol","reduce","split","join","push","resResult","datapoints","sortBy","_time","time","value","count","newtarget","pieRes","i","j","all","map","p","catch","e","_t","t","err","message","title","Date","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","end","mapToTextValue","d","x","row","k","text","datasourceRequest","filter","scopedVars","refId"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport {SLS} from \"./sls.js\";\n\nexport class GenericDatasource {\n    constructor(instanceSettings, $q, backendSrv, templateSrv) {\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.projectName = instanceSettings.jsonData.project;\n        this.logstore = instanceSettings.jsonData.logstore;\n        //this.endpoint = instanceSettings.jsonData.endpoint;\n        this.user = instanceSettings.jsonData.user;\n        this.password = instanceSettings.jsonData.password;\n        this.q = $q;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        this.withCredentials = instanceSettings.withCredentials;\n        this.headers = {'Content-Type': 'application/json'};\n        if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n            this.headers['Authorization'] = instanceSettings.basicAuth;\n        }\n        this.defaultConfig = {\n\n            //requires\n            accessId: this.user,                  //accessId\n            accessKey: this.password,                 //accessKey\n            //endpoint: this.endpoint,            //sls service endpoint\n\n            //optional\n            timeout: 20000,         //请求timeout时间, 默认: 20s\n\n\n            signature_method: 'hmac-sha1', //签名计算方式，目前只支持'hmac-sha1', 默认: 'hmac-sha1'\n            api_version: '0.6.0',  //数据相关api version 默认 0.3.0\n\n            logger: false   //打印请求的详细信息, log4js 实例\n        };\n\n    }\n\n    query(options) {\n        console.log(\"hello\",options)\n        let requests = []\n        let slsclient = new SLS(this.defaultConfig, this.backendSrv, this.url);\n        let promise = Promise.resolve();\n        _(options.targets).forEach(target => {\n            if (target.hide) {\n                return\n            }\n        let query = this.templateSrv.replace(target.query, {}, 'glob');\n        var re = /\\$([0-9]+)([dmhs])/g;\n        var reArray = query.match(re);\n        _(reArray).forEach(col => {\n            var old = col;\n            col = col.replace(\"$\",'');\n            var sec = 1;\n            if(col.indexOf(\"s\") != -1)\n                sec = 1;\n            else if(col.indexOf(\"m\") != -1)\n                sec = 60;\n            else if(col.indexOf(\"h\") != -1)\n                sec = 3600;\n            else if(col.indexOf(\"d\") != -1)\n                sec = 3600*24;\n            col = col .replace(/[smhd]/g,'');\n            var v = parseInt(col);\n            v = v* sec;\n            console.log(old,v,col,sec,query);\n            query = query.replace(old,v);\n        });\n\n            let request = slsclient.GetData(this.projectName,this.logstore, {\n                \"topic\": \"\",\n                \"from\": parseInt(options.range.from._d.getTime() / 1000),\n                \"to\": parseInt(options.range.to._d.getTime() / 1000),\n                \"query\": query,\n                \"reverse\": \"false\",\n                \"lines\": \"100\",\n                \"offset\": \"0\"\n            })\n                .then(result => {\n                    this.doRequest({\n                        url: 'http://slstrack.cn-hangzhou.log.aliyuncs.com/logstores/grafana/track_ua.gif?APIVersion=0.6.0&status='+result.status+\"&query=\"+query+\"&project=\"+this.projectName+\"&logstore=\"+this.logstore,\n                        method: 'GET',\n                    }).then(r=> {\n                        return r;\n                    });\n                    if (!(result.data)) {\n                        return Promise.reject(new Error(\"this promise is rejected\"));\n                    }\n\n                    result.time_col = target.xcol\n                    result.ycol = _.reduce(target.ycol.split(\",\"), (result, data) => {\n                        data = data.split(' ').join('')\n                        if (data) {\n                            result.push(data)\n                        }\n                        return result\n                    }, [])\n                    return result\n                })\n                .then(result => {\n                    console.log(\"test\",result)\n                    let resResult = []\n                    _(result.ycol).forEach(col => {\n                        let datapoints = []\n                        if(result.time_col != null && result.time_col!= \"\" && result.time_col != \"pie\" && result.time_col!='bar'){\n                            _.sortBy(result.data, [result.time_col]).forEach(data => {\n                                const _time = data[result.time_col]\n                                    const time = parseInt(_time) * 1000\n                                    const value = parseInt(data[col])\n                                    datapoints.push([value, time])\n                            })\n                        }\n                        else{\n                            let count = 0;\n                            _(result.data).forEach(data => {\n                                const value = (data[col]);\n                                datapoints.push([value, 1000*(parseInt(data[\"__time__\"])-count)]);\n                                count = count-1;\n                            })\n                        }\n                        resResult.push({\n                            \"target\": col,\n                            \"datapoints\": datapoints\n                        })\n                    })\n                    if(result.time_col == \"pie\" || result.time_col=='bar'){\n                        let newtarget =[];\n                        let datapoints =[];\n                        let pieRes = [];\n                        for(var i = 0;i < resResult[0].datapoints.length;++i){\n                            for(var j = 0;j < resResult[1].datapoints[i].length;++j)\n                            {\n                                resResult[1].datapoints[i][j] = parseInt(resResult[1].datapoints[i][j]);\n                            }\n\n                            pieRes.push({\n                                \"target\" : resResult[0].datapoints[i][0],\n                                \"datapoints\": [resResult[1].datapoints[i]]\n                            });\n                        }\n                        return pieRes;\n                    }\n                    console.log(resResult);\n                    return resResult\n\n                });\n            requests.push(request)\n\n        })\n\n        return Promise.all(requests\n            .map(p => p.catch(e => e)))\n            .then(requests => {\n                console.log(\"1:\", requests)\n\n                const _t = _.reduce(requests, (result, data) => {\n                    _(data).forEach(t => result.push(t))\n                    return result\n                }, [])\n                console.log(\"1:\", _t)\n                return {\n                    data: _t\n                }\n\n            }) // 1,Error: 2,3\n            .catch(err => {\n                if (err.data && err.data.message) {\n                    return {status: \"error\", message: err.data.message, title: \"Error\"};\n                } else {\n                    return {status: \"error\", message: err.status, title: \"Error\"};\n                }\n            });\n    }\n\n    testDatasource() {\n        let slsclient = new SLS(this.defaultConfig, this.backendSrv, this.url);\n        return slsclient.GetData(this.projectName,this.logstore,\n            {\n                \"topic\": \"\",\n                \"from\": parseInt((new Date().getTime() / 1000) - 900),\n                \"to\": parseInt(new Date().getTime() / 1000),\n                \"query\": \"\",\n                \"reverse\": \"false\",\n                \"line\": \"10\",\n                \"offset\": \"0\"\n            }).then(function (result) {\n\n            return {status: \"success\", message: \"Database Connection OK\", title: \"Success\"};\n        }, function (err) {\n            console.log(\"testDataSource err\", err);\n            if (err.data && err.data.message) {\n                return {status: \"error\", message: err.data.message, title: \"Error\"};\n            } else {\n                return {status: \"error\", message: err.status, title: \"Error\"};\n            }\n\n        });\n\n\n    }\n\n    annotationQuery(options) {\n        let query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n        let annotationQuery = {\n            range: options.range,\n            annotation: {\n                name: options.annotation.name,\n                datasource: options.annotation.datasource,\n                enable: options.annotation.enable,\n                iconColor: options.annotation.iconColor,\n                query: query\n            },\n            rangeRaw: options.rangeRaw\n        };\n\n        return this.doRequest({\n            url: this.url + '/annotations',\n            method: 'POST',\n            data: annotationQuery\n        }).then(result => {\n            return result.data;\n        });\n    }\n\n    metricFindQuery(options) {\n        console.log(options);\n        let requests = []\n        let slsclient = new SLS(this.defaultConfig, this.backendSrv, this.url);\n        let promise = Promise.resolve();\n        let query = this.templateSrv.replace(options, {}, 'glob');\n\n            let end =parseInt( (new Date()).getTime()/1000);\n            let request = slsclient.GetData(this.projectName,this.logstore, {\n                \"topic\": \"\",\n                \"from\": end-86400,\n                \"to\": end,\n                \"query\": query,\n                \"reverse\": \"false\",\n                \"lines\": \"100\",\n                \"offset\": \"0\"\n            })\n            .then( this.mapToTextValue);\n//result => {\n//                if (!(result.data)) {\n//                    return Promise.reject(new Error(\"this promise is rejected\"));\n//                }\n//                var res = [];\n//                _(result.data).forEach(row => {\n//                    _.map(row, (k,v) => {\n//                        console.log(k,v);\n//                        if(v != \"__time__\" && v != \"__source__\")\n//                            res.push(k);\n//                    });\n//                });\n//                console.log(res);\n//                return res;\n//            }\n    }\n\n    mapToTextValue(result) {\n        return _.map(result.data, (d, i) => {\n            let x = \"\";\n            console.log(d,i);\n                _(result.data).forEach(row => {\n                    _.map(row, (k,v) => {\n                        if(v != \"__time__\" && v != \"__source__\")\n                            x = k;\n                    });\n                });\n            return {text: x, value: x};\n        });\n    }\n\n    doRequest(options) {\n        options.withCredentials = this.withCredentials;\n        options.headers = this.headers;\n\n        return this.backendSrv.datasourceRequest(options);\n    }\n\n    buildQueryParameters(options) {\n        //remove placeholder targets\n        options.targets = _.filter(options.targets, target => {\n            return target.target !== 'select metric';\n        });\n        let targets = _.map(options.targets, target => {\n            return {\n                target: this.templateSrv.replace(target.target, options.scopedVars, 'regex'),\n                refId: target.refId,\n                hide: target.hide,\n                type: target.type || 'timeserie'\n            };\n        });\n\n        options.targets = targets;\n\n        return options;\n    }\n}\n"]}